{"ast":null,"code":"var _jsxFileName = \"/Users/clarence/Code/echart-report-ui/src/Components/EchartsBoardItemComponent.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport BoardItem from \"@cloudscape-design/board-components/board-item\";\nimport Header from \"@cloudscape-design/components/header\";\nimport Board from \"@cloudscape-design/board-components/board\";\nimport { Button } from \"@cloudscape-design/components\";\nimport Filter from \"./Filter\";\nimport EchartsComponent from \"./Echart/EchartsComponent\";\nimport ButtonDropdown from \"@cloudscape-design/components/button-dropdown\";\nimport Tabs from \"@cloudscape-design/components/tabs\";\nimport { useImperativeHandle, useState } from \"react\";\nimport TableChart from \"./Table\";\nimport useDeletedStore from \"../Store/DeletedStore\";\nimport { useQuery } from \"@apollo/client\";\nimport TestQuery from \"../GraphQL/ReportingDashboardQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EchartsBoardItemComponent = props => {\n  _s();\n  const {\n    optionSet\n  } = props;\n  let options = optionSet;\n  // console.log(\"receive render options:\",options,options.length);\n  const [items, setItems] = React.useState([]);\n  const {\n    loading,\n    data,\n    error,\n    client\n  } = useQuery(TestQuery);\n  const [chartOptions, setChartOptions] = useState();\n  const [deleteId, setDeleteId] = useState([]);\n  const deleteIdInStore = useDeletedStore(state => state.deleteId);\n  const deletedListInStore = useDeletedStore(state => state.deletedIdList);\n  const setDeleteIdInStore = useDeletedStore(state => state.setId);\n  React.useEffect(() => {\n    const boardItems = [];\n    options.forEach(item => {\n      // console.log(\"option-id ->\", item.id)\n      //  if(item.type === \"table\"){\n      //      boardItems.push({\n      //          id: item.id,\n      //          rowSpan: 5,\n      //          columnSpan: 4,\n      //          data:{\n      //              title: \"\",\n      //              content: (\n      //                  <TableChart tableValue={data} tableColumns={item.field}/>\n      //              )\n      //          }\n      //      })\n      //  }\n      boardItems.push({\n        id: item.id,\n        rowSpan: 5,\n        columnSpan: 4,\n        data: {\n          title: \"\",\n          content: /*#__PURE__*/_jsxDEV(EchartsComponent, {\n            option: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)\n        }\n      });\n    });\n    // if(props.tableColumns){\n    //     boardItems.push({\n    //         id: boardItems.length+1,\n    //         rowSpan: 5,\n    //         columnSpan: 4,\n    //         data:{\n    //             title: \"title\",\n    //             content: (\n    //                <TableChart tableValue={props.tableValue} tableColumns={props.tableColumns}/>\n    //             )\n    //         }\n    //     })\n    // }\n    setItems(boardItems);\n  }, [optionSet[optionSet.length - 1]]);\n  const dosomething = event => {\n    console.log(event, event.detail.items);\n    setItems(event.detail.items);\n  };\n  const onRemove = delete_id => {\n    let val = items.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id !== delete_id;\n    });\n    // options = options.filter(({id}) =>{\n    //     return id !== param;\n    // })\n    // let new_ops = [];\n    // options.forEach((item)=>{\n    //    if(item.id !== param){\n    //        new_ops.push(item);\n    //    }\n    // });\n    // options = new_ops;\n    // console.log('finanl -op',options,new_ops)\n    setItems(val);\n    props.deleteId(delete_id);\n    // setDeleteIdInStore(delete_id)\n  };\n\n  return /*#__PURE__*/_jsxDEV(Board, {\n    renderItem: item => /*#__PURE__*/_jsxDEV(BoardItem, {\n      header: /*#__PURE__*/_jsxDEV(Header, {\n        children: item.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this),\n      i18nStrings: {\n        dragHandleAriaLabel: \"Drag handle\",\n        dragHandleAriaDescription: \"Use Space or Enter to activate drag, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n        resizeHandleAriaLabel: \"Resize handle\",\n        resizeHandleAriaDescription: \"Use Space or Enter to activate resize, arrow keys to move, Space or Enter to submit, or Escape to discard.\"\n      },\n      settings: /*#__PURE__*/_jsxDEV(ButtonDropdown, {\n        items: [{\n          text: \"Remove\",\n          id: \"rm\",\n          disabled: false\n        }],\n        variant: \"icon\",\n        onItemClick: event => {\n          if (event.detail.id === 'rm') {\n            onRemove(item.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this),\n      children: item.data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this),\n    onItemsChange: event =>\n    //  setItems(event.detail.items)\n    dosomething(event),\n    items: items,\n    i18nStrings: (() => {\n      function createAnnouncement(operationAnnouncement, conflicts, disturbed) {\n        const conflictsAnnouncement = conflicts.length > 0 ? `Conflicts with ${conflicts.map(c => c.data.title).join(\", \")}.` : \"\";\n        const disturbedAnnouncement = disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : \"\";\n        return [operationAnnouncement, conflictsAnnouncement, disturbedAnnouncement].filter(Boolean).join(\" \");\n      }\n      return {\n        liveAnnouncementDndStarted: operationType => operationType === \"resize\" ? \"Resizing\" : \"Dragging\",\n        liveAnnouncementDndItemReordered: operation => {\n          const columns = `column ${operation.placement.x + 1}`;\n          const rows = `row ${operation.placement.y + 1}`;\n          return createAnnouncement(`Item moved to ${operation.direction === \"horizontal\" ? columns : rows}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndItemResized: operation => {\n          const columnsConstraint = operation.isMinimalColumnsReached ? \" (minimal)\" : \"\";\n          const rowsConstraint = operation.isMinimalRowsReached ? \" (minimal)\" : \"\";\n          const sizeAnnouncement = operation.direction === \"horizontal\" ? `columns ${operation.placement.width}${columnsConstraint}` : `rows ${operation.placement.height}${rowsConstraint}`;\n          return createAnnouncement(`Item resized to ${sizeAnnouncement}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndItemInserted: operation => {\n          const columns = `column ${operation.placement.x + 1}`;\n          const rows = `row ${operation.placement.y + 1}`;\n          return createAnnouncement(`Item inserted to ${columns}, ${rows}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndCommitted: operationType => `${operationType} committed`,\n        liveAnnouncementDndDiscarded: operationType => `${operationType} discarded`,\n        liveAnnouncementItemRemoved: op => createAnnouncement(`Removed item ${op.item.data.title}.`, [], op.disturbed),\n        navigationAriaLabel: \"Board navigation\",\n        navigationAriaDescription: \"Click on non-empty item to move focus over\",\n        navigationItemAriaLabel: item => item ? item.data.title : \"Empty\"\n      };\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 7\n  }, this);\n};\n// export default React.memo(EchartsBoardItemComponent)\n_s(EchartsBoardItemComponent, \"9eNFsnC7txf7iCbxO+fwnmwf/X4=\", false, function () {\n  return [useQuery, useDeletedStore, useDeletedStore, useDeletedStore];\n});\n_c = EchartsBoardItemComponent;\nexport default EchartsBoardItemComponent;\nvar _c;\n$RefreshReg$(_c, \"EchartsBoardItemComponent\");","map":{"version":3,"names":["React","BoardItem","Header","Board","Button","Filter","EchartsComponent","ButtonDropdown","Tabs","useImperativeHandle","useState","TableChart","useDeletedStore","useQuery","TestQuery","jsxDEV","_jsxDEV","EchartsBoardItemComponent","props","_s","optionSet","options","items","setItems","loading","data","error","client","chartOptions","setChartOptions","deleteId","setDeleteId","deleteIdInStore","state","deletedListInStore","deletedIdList","setDeleteIdInStore","setId","useEffect","boardItems","forEach","item","push","id","rowSpan","columnSpan","title","content","option","fileName","_jsxFileName","lineNumber","columnNumber","length","dosomething","event","console","log","detail","onRemove","delete_id","val","filter","_ref","renderItem","header","children","i18nStrings","dragHandleAriaLabel","dragHandleAriaDescription","resizeHandleAriaLabel","resizeHandleAriaDescription","settings","text","disabled","variant","onItemClick","onItemsChange","createAnnouncement","operationAnnouncement","conflicts","disturbed","conflictsAnnouncement","map","c","join","disturbedAnnouncement","Boolean","liveAnnouncementDndStarted","operationType","liveAnnouncementDndItemReordered","operation","columns","placement","x","rows","y","direction","liveAnnouncementDndItemResized","columnsConstraint","isMinimalColumnsReached","rowsConstraint","isMinimalRowsReached","sizeAnnouncement","width","height","liveAnnouncementDndItemInserted","liveAnnouncementDndCommitted","liveAnnouncementDndDiscarded","liveAnnouncementItemRemoved","op","navigationAriaLabel","navigationAriaDescription","navigationItemAriaLabel","_c","$RefreshReg$"],"sources":["/Users/clarence/Code/echart-report-ui/src/Components/EchartsBoardItemComponent.jsx"],"sourcesContent":["import * as React from \"react\";\nimport BoardItem from \"@cloudscape-design/board-components/board-item\";\nimport Header from \"@cloudscape-design/components/header\";\nimport Board from \"@cloudscape-design/board-components/board\";\nimport { Button } from \"@cloudscape-design/components\";\nimport Filter from \"./Filter\";\nimport EchartsComponent from \"./Echart/EchartsComponent\";\nimport ButtonDropdown from \"@cloudscape-design/components/button-dropdown\";\nimport Tabs from \"@cloudscape-design/components/tabs\";\nimport {useImperativeHandle, useState} from \"react\";\nimport TableChart from \"./Table\";\nimport useDeletedStore from \"../Store/DeletedStore\";\nimport {useQuery} from \"@apollo/client\";\nimport TestQuery from \"../GraphQL/ReportingDashboardQuery\";\n\nconst EchartsBoardItemComponent = (props) => {\n    const {optionSet} = props;\n   let options = optionSet;\n   // console.log(\"receive render options:\",options,options.length);\n   const [items, setItems] = React.useState([]);\n    const {loading, data, error, client} = useQuery(TestQuery);\n   const [ chartOptions, setChartOptions] = useState();\n   const [ deleteId, setDeleteId] = useState([]);\n   const deleteIdInStore = useDeletedStore((state) => state.deleteId);\n   const deletedListInStore = useDeletedStore((state) => state.deletedIdList);\n   const setDeleteIdInStore = useDeletedStore((state) => state.setId)\n    React.useEffect(()=>{\n      const boardItems = [];\n      options.forEach((item)=>{\n         // console.log(\"option-id ->\", item.id)\n         //  if(item.type === \"table\"){\n         //      boardItems.push({\n         //          id: item.id,\n         //          rowSpan: 5,\n         //          columnSpan: 4,\n         //          data:{\n         //              title: \"\",\n         //              content: (\n         //                  <TableChart tableValue={data} tableColumns={item.field}/>\n         //              )\n         //          }\n         //      })\n         //  }\n         boardItems.push({\n            id: item.id,\n            rowSpan: 5,\n            columnSpan: 4,\n            data:{\n               title: \"\",\n               content: (\n                  <EchartsComponent option={item} />\n               )\n            }\n         })\n      });\n      // if(props.tableColumns){\n      //     boardItems.push({\n      //         id: boardItems.length+1,\n      //         rowSpan: 5,\n      //         columnSpan: 4,\n      //         data:{\n      //             title: \"title\",\n      //             content: (\n      //                <TableChart tableValue={props.tableValue} tableColumns={props.tableColumns}/>\n      //             )\n      //         }\n      //     })\n      // }\n      setItems(boardItems);\n    },[optionSet[optionSet.length - 1]])\n    const dosomething = (event) => {\n      console.log(event, event.detail.items);\n      setItems(event.detail.items);\n    };\n    const onRemove = (delete_id) =>{\n        let val = items.filter(({id}) =>{\n            return id !== delete_id;\n        })\n        // options = options.filter(({id}) =>{\n        //     return id !== param;\n        // })\n        // let new_ops = [];\n        // options.forEach((item)=>{\n        //    if(item.id !== param){\n        //        new_ops.push(item);\n        //    }\n        // });\n        // options = new_ops;\n        // console.log('finanl -op',options,new_ops)\n        setItems(val);\n        props.deleteId(delete_id);\n        // setDeleteIdInStore(delete_id)\n    }\n\n    return (\n      <Board\n        renderItem={(item) => (\n          <BoardItem\n            header={<Header>{item.data.title}</Header>}\n            i18nStrings={{\n              dragHandleAriaLabel: \"Drag handle\",\n              dragHandleAriaDescription:\n                \"Use Space or Enter to activate drag, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n              resizeHandleAriaLabel: \"Resize handle\",\n              resizeHandleAriaDescription:\n                \"Use Space or Enter to activate resize, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n            }}\n            settings={\n              <ButtonDropdown\n                  items={[\n                      { text: \"Remove\", id: \"rm\", disabled: false },\n                  ]}\n                  variant=\"icon\"\n                  onItemClick={event =>{\n                      if(event.detail.id === 'rm'){\n                          onRemove(item.id);\n                      }\n                  }}\n              />\n            }\n          >\n            {item.data.content}\n            {/* {renderButton()} */}\n          </BoardItem>\n        )}\n        onItemsChange={(event) =>\n          //  setItems(event.detail.items)\n          dosomething(event)\n        }\n        items={items}\n        i18nStrings={(() => {\n          function createAnnouncement(\n            operationAnnouncement,\n            conflicts,\n            disturbed\n          ) {\n            const conflictsAnnouncement =\n              conflicts.length > 0\n                ? `Conflicts with ${conflicts\n                    .map((c) => c.data.title)\n                    .join(\", \")}.`\n                : \"\";\n            const disturbedAnnouncement =\n              disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : \"\";\n            return [\n              operationAnnouncement,\n              conflictsAnnouncement,\n              disturbedAnnouncement,\n            ]\n              .filter(Boolean)\n              .join(\" \");\n          }\n          return {\n            liveAnnouncementDndStarted: (operationType) =>\n              operationType === \"resize\" ? \"Resizing\" : \"Dragging\",\n            liveAnnouncementDndItemReordered: (operation) => {\n              const columns = `column ${operation.placement.x + 1}`;\n              const rows = `row ${operation.placement.y + 1}`;\n              return createAnnouncement(\n                `Item moved to ${\n                  operation.direction === \"horizontal\" ? columns : rows\n                }.`,\n                operation.conflicts,\n                operation.disturbed\n              );\n            },\n            liveAnnouncementDndItemResized: (operation) => {\n              const columnsConstraint = operation.isMinimalColumnsReached\n                ? \" (minimal)\"\n                : \"\";\n              const rowsConstraint = operation.isMinimalRowsReached\n                ? \" (minimal)\"\n                : \"\";\n              const sizeAnnouncement =\n                operation.direction === \"horizontal\"\n                  ? `columns ${operation.placement.width}${columnsConstraint}`\n                  : `rows ${operation.placement.height}${rowsConstraint}`;\n              return createAnnouncement(\n                `Item resized to ${sizeAnnouncement}.`,\n                operation.conflicts,\n                operation.disturbed\n              );\n            },\n            liveAnnouncementDndItemInserted: (operation) => {\n              const columns = `column ${operation.placement.x + 1}`;\n              const rows = `row ${operation.placement.y + 1}`;\n              return createAnnouncement(\n                `Item inserted to ${columns}, ${rows}.`,\n                operation.conflicts,\n                operation.disturbed\n              );\n            },\n            liveAnnouncementDndCommitted: (operationType) =>\n              `${operationType} committed`,\n            liveAnnouncementDndDiscarded: (operationType) =>\n              `${operationType} discarded`,\n            liveAnnouncementItemRemoved: (op) =>\n              createAnnouncement(\n                `Removed item ${op.item.data.title}.`,\n                [],\n                op.disturbed\n              ),\n            navigationAriaLabel: \"Board navigation\",\n            navigationAriaDescription:\n              \"Click on non-empty item to move focus over\",\n            navigationItemAriaLabel: (item) => (item ? item.data.title : \"Empty\"),\n          };\n        })()}\n      />\n    );\n}\n// export default React.memo(EchartsBoardItemComponent)\nexport default EchartsBoardItemComponent\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}