{"ast":null,"code":"var _jsxFileName = \"/Users/dudu/git-repo/Echart-Report/src/Components/DashboardComponent.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport BoardItem from \"@cloudscape-design/board-components/board-item\";\nimport Header from \"@cloudscape-design/components/header\";\nimport Board from \"@cloudscape-design/board-components/board\";\nimport { Button } from \"@cloudscape-design/components\";\nimport Filter from \"./Filter\";\nimport TestComponent from \"./TestComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardComponent() {\n  _s();\n  const [items, setItems] = React.useState([\n  // {\n  //   id: \"1\",\n  //   rowSpan: 1,\n  //   columnSpan: 2,\n  //   data: {\n  //     title: \"Demo 1\",\n  //     description: \"\",\n  //     content: null,\n  //   },\n  // },\n  // {\n  //   id: \"2\",\n  //   rowSpan: 1,\n  //   columnSpan: 2,\n  //   data: {\n  //     title: \"Demo 2\",\n  //     description: \"desc\",\n  //     content: (\n  //       <Filter />\n  //     ),\n  //   },\n  // },\n  {\n    id: \"3\",\n    rowSpan: 4,\n    columnSpan: 2,\n    data: {\n      title: \"Demo 3\",\n      content: /*#__PURE__*/_jsxDEV(TestComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }\n  }, {\n    id: \"4\",\n    rowSpan: 4,\n    columnSpan: 2,\n    data: {\n      title: \"Demo 4\",\n      content: /*#__PURE__*/_jsxDEV(TestComponent, {\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }\n  }]);\n  const dosomething = event => {\n    console.log(event, event.detail.items);\n    setItems(event.detail.items);\n  };\n  return /*#__PURE__*/_jsxDEV(Board, {\n    renderItem: item => /*#__PURE__*/_jsxDEV(BoardItem, {\n      header: /*#__PURE__*/_jsxDEV(Header, {\n        children: item.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this),\n      i18nStrings: {\n        dragHandleAriaLabel: \"Drag handle\",\n        dragHandleAriaDescription: \"Use Space or Enter to activate drag, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n        resizeHandleAriaLabel: \"Resize handle\",\n        resizeHandleAriaDescription: \"Use Space or Enter to activate resize, arrow keys to move, Space or Enter to submit, or Escape to discard.\"\n      },\n      children: item.data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this),\n    onItemsChange: event =>\n    //  setItems(event.detail.items)\n    dosomething(event),\n    items: items,\n    i18nStrings: (() => {\n      function createAnnouncement(operationAnnouncement, conflicts, disturbed) {\n        const conflictsAnnouncement = conflicts.length > 0 ? `Conflicts with ${conflicts.map(c => c.data.title).join(\", \")}.` : \"\";\n        const disturbedAnnouncement = disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : \"\";\n        return [operationAnnouncement, conflictsAnnouncement, disturbedAnnouncement].filter(Boolean).join(\" \");\n      }\n      return {\n        liveAnnouncementDndStarted: operationType => operationType === \"resize\" ? \"Resizing\" : \"Dragging\",\n        liveAnnouncementDndItemReordered: operation => {\n          const columns = `column ${operation.placement.x + 1}`;\n          const rows = `row ${operation.placement.y + 1}`;\n          return createAnnouncement(`Item moved to ${operation.direction === \"horizontal\" ? columns : rows}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndItemResized: operation => {\n          const columnsConstraint = operation.isMinimalColumnsReached ? \" (minimal)\" : \"\";\n          const rowsConstraint = operation.isMinimalRowsReached ? \" (minimal)\" : \"\";\n          const sizeAnnouncement = operation.direction === \"horizontal\" ? `columns ${operation.placement.width}${columnsConstraint}` : `rows ${operation.placement.height}${rowsConstraint}`;\n          return createAnnouncement(`Item resized to ${sizeAnnouncement}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndItemInserted: operation => {\n          const columns = `column ${operation.placement.x + 1}`;\n          const rows = `row ${operation.placement.y + 1}`;\n          return createAnnouncement(`Item inserted to ${columns}, ${rows}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndCommitted: operationType => `${operationType} committed`,\n        liveAnnouncementDndDiscarded: operationType => `${operationType} discarded`,\n        liveAnnouncementItemRemoved: op => createAnnouncement(`Removed item ${op.item.data.title}.`, [], op.disturbed),\n        navigationAriaLabel: \"Board navigation\",\n        navigationAriaDescription: \"Click on non-empty item to move focus over\",\n        navigationItemAriaLabel: item => item ? item.data.title : \"Empty\"\n      };\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardComponent, \"U9oDUcKajn/Ta3CMWj9Mc6dqRkM=\");\n_c = DashboardComponent;\nvar _c;\n$RefreshReg$(_c, \"DashboardComponent\");","map":{"version":3,"names":["React","BoardItem","Header","Board","Button","Filter","TestComponent","jsxDEV","_jsxDEV","DashboardComponent","_s","items","setItems","useState","id","rowSpan","columnSpan","data","title","content","fileName","_jsxFileName","lineNumber","columnNumber","align","dosomething","event","console","log","detail","renderItem","item","header","children","i18nStrings","dragHandleAriaLabel","dragHandleAriaDescription","resizeHandleAriaLabel","resizeHandleAriaDescription","onItemsChange","createAnnouncement","operationAnnouncement","conflicts","disturbed","conflictsAnnouncement","length","map","c","join","disturbedAnnouncement","filter","Boolean","liveAnnouncementDndStarted","operationType","liveAnnouncementDndItemReordered","operation","columns","placement","x","rows","y","direction","liveAnnouncementDndItemResized","columnsConstraint","isMinimalColumnsReached","rowsConstraint","isMinimalRowsReached","sizeAnnouncement","width","height","liveAnnouncementDndItemInserted","liveAnnouncementDndCommitted","liveAnnouncementDndDiscarded","liveAnnouncementItemRemoved","op","navigationAriaLabel","navigationAriaDescription","navigationItemAriaLabel","_c","$RefreshReg$"],"sources":["/Users/dudu/git-repo/Echart-Report/src/Components/DashboardComponent.jsx"],"sourcesContent":["import * as React from \"react\";\nimport BoardItem from \"@cloudscape-design/board-components/board-item\";\nimport Header from \"@cloudscape-design/components/header\";\nimport Board from \"@cloudscape-design/board-components/board\";\nimport { Button } from \"@cloudscape-design/components\";\nimport Filter from \"./Filter\";\nimport TestComponent from \"./TestComponent\";\n\nexport default function DashboardComponent() {\n  const [items, setItems] = React.useState([\n    // {\n    //   id: \"1\",\n    //   rowSpan: 1,\n    //   columnSpan: 2,\n    //   data: {\n    //     title: \"Demo 1\",\n    //     description: \"\",\n    //     content: null,\n    //   },\n    // },\n    // {\n    //   id: \"2\",\n    //   rowSpan: 1,\n    //   columnSpan: 2,\n    //   data: {\n    //     title: \"Demo 2\",\n    //     description: \"desc\",\n    //     content: (\n    //       <Filter />\n    //     ),\n    //   },\n    // },\n    {\n      id: \"3\",\n      rowSpan: 4,\n      columnSpan: 2,\n      data: {\n        title: \"Demo 3\",\n        content: (\n          <TestComponent/>\n        ),\n      },\n    },\n    {\n      id: \"4\",\n      rowSpan: 4,\n      columnSpan: 2,\n      data: {\n        title: \"Demo 4\",\n        content: (\n          <TestComponent align=\"center\"/>\n        ),\n      },\n    },\n  ]);\n  const dosomething = (event) => {\n    console.log(event, event.detail.items);\n    setItems(event.detail.items);\n  };\n  return (\n    <Board\n      renderItem={(item) => (\n        <BoardItem\n          header={<Header>{item.data.title}</Header>}\n          i18nStrings={{\n            dragHandleAriaLabel: \"Drag handle\",\n            dragHandleAriaDescription:\n              \"Use Space or Enter to activate drag, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n            resizeHandleAriaLabel: \"Resize handle\",\n            resizeHandleAriaDescription:\n              \"Use Space or Enter to activate resize, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n          }}\n        >\n          {item.data.content}\n          {/* {renderButton()} */}\n        </BoardItem>\n      )}\n      onItemsChange={(event) =>\n        //  setItems(event.detail.items)\n        dosomething(event)\n      }\n      items={items}\n      i18nStrings={(() => {\n        function createAnnouncement(\n          operationAnnouncement,\n          conflicts,\n          disturbed\n        ) {\n          const conflictsAnnouncement =\n            conflicts.length > 0\n              ? `Conflicts with ${conflicts\n                  .map((c) => c.data.title)\n                  .join(\", \")}.`\n              : \"\";\n          const disturbedAnnouncement =\n            disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : \"\";\n          return [\n            operationAnnouncement,\n            conflictsAnnouncement,\n            disturbedAnnouncement,\n          ]\n            .filter(Boolean)\n            .join(\" \");\n        }\n        return {\n          liveAnnouncementDndStarted: (operationType) =>\n            operationType === \"resize\" ? \"Resizing\" : \"Dragging\",\n          liveAnnouncementDndItemReordered: (operation) => {\n            const columns = `column ${operation.placement.x + 1}`;\n            const rows = `row ${operation.placement.y + 1}`;\n            return createAnnouncement(\n              `Item moved to ${\n                operation.direction === \"horizontal\" ? columns : rows\n              }.`,\n              operation.conflicts,\n              operation.disturbed\n            );\n          },\n          liveAnnouncementDndItemResized: (operation) => {\n            const columnsConstraint = operation.isMinimalColumnsReached\n              ? \" (minimal)\"\n              : \"\";\n            const rowsConstraint = operation.isMinimalRowsReached\n              ? \" (minimal)\"\n              : \"\";\n            const sizeAnnouncement =\n              operation.direction === \"horizontal\"\n                ? `columns ${operation.placement.width}${columnsConstraint}`\n                : `rows ${operation.placement.height}${rowsConstraint}`;\n            return createAnnouncement(\n              `Item resized to ${sizeAnnouncement}.`,\n              operation.conflicts,\n              operation.disturbed\n            );\n          },\n          liveAnnouncementDndItemInserted: (operation) => {\n            const columns = `column ${operation.placement.x + 1}`;\n            const rows = `row ${operation.placement.y + 1}`;\n            return createAnnouncement(\n              `Item inserted to ${columns}, ${rows}.`,\n              operation.conflicts,\n              operation.disturbed\n            );\n          },\n          liveAnnouncementDndCommitted: (operationType) =>\n            `${operationType} committed`,\n          liveAnnouncementDndDiscarded: (operationType) =>\n            `${operationType} discarded`,\n          liveAnnouncementItemRemoved: (op) =>\n            createAnnouncement(\n              `Removed item ${op.item.data.title}.`,\n              [],\n              op.disturbed\n            ),\n          navigationAriaLabel: \"Board navigation\",\n          navigationAriaDescription:\n            \"Click on non-empty item to move focus over\",\n          navigationItemAriaLabel: (item) => (item ? item.data.title : \"Empty\"),\n        };\n      })()}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}