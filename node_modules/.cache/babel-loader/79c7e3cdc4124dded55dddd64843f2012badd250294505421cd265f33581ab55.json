{"ast":null,"code":"var _jsxFileName = \"/Users/dudu/git-repo/Echart-Report/src/App.js\",\n  _s = $RefreshSig$();\nimport { createAuthLink } from \"aws-appsync-auth-link\";\nimport { createSubscriptionHandshakeLink } from \"aws-appsync-subscription-link\";\nimport React, { useState, useRef, forwardRef } from \"react\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, ApolloLink } from \"@apollo/client\";\nimport \"./App.css\";\nimport appSyncConfig from \"./aws-exports\";\nimport Home from \"./Components/Home\";\nimport \"@cloudscape-design/global-styles/index.css\";\nimport DashboardComponent from \"./Components/DashboardComponent\";\nimport MainComponent from \"./Components/MainComponent\";\nimport CardsComponent from \"./Components/CardsComponent\";\nimport { AppLayout, AppLayoutProps, HelpPanel } from \"@cloudscape-design/components\";\nimport { Navigation } from \"./Common/navigation\";\nimport DetailsCards from \"./Components/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toolsOpen, setToolsOpen] = useState(false);\n  const appLayout = useRef();\n  const url = appSyncConfig.aws_appsync_graphqlEndpoint;\n  const region = appSyncConfig.aws_appsync_region;\n  const auth = {\n    type: appSyncConfig.aws_appsync_authenticationType,\n    apiKey: appSyncConfig.aws_appsync_apiKey\n    // jwtToken: async () => token, // Required when you use Cognito UserPools OR OpenID Connect. token object is obtained previously\n    // credentials: async () => credentials, // Required when you use IAM-based auth.\n  };\n\n  const httpLink = new HttpLink({\n    uri: url\n  });\n  const appLayoutAriaLabels = {\n    navigation: 'Side navigation',\n    navigationToggle: 'Open side navigation',\n    navigationClose: 'Close side navigation',\n    notifications: 'Notifications',\n    tools: 'Help panel',\n    toolsToggle: 'Open help panel',\n    toolsClose: 'Close help panel'\n  };\n  const CustomAppLayout = /*#__PURE__*/forwardRef((props, ref) => {\n    return /*#__PURE__*/_jsxDEV(AppLayout, {\n      ref: ref,\n      ariaLabels: appLayoutAriaLabels,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  });\n  const link = ApolloLink.from([createAuthLink({\n    url,\n    region,\n    auth\n  }), createSubscriptionHandshakeLink({\n    url,\n    region,\n    auth\n  }, httpLink)]);\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache()\n  });\n  const ToolsContent = () => /*#__PURE__*/_jsxDEV(HelpPanel, {\n    header: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Distributions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"View your current distributions and related information such as the associated domain names, delivery methods, SSL certificates, and more. To drill down even further into the details, choose the name of an individual distribution.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CustomAppLayout, {\n    ref: appLayout,\n    navigation: /*#__PURE__*/_jsxDEV(Navigation, {\n      activeHref: \"#/distributions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this)\n    // notifications={<Notifications successNotification={true} />}\n    // breadcrumbs={<Breadcrumbs />}\n    ,\n    content: /*#__PURE__*/_jsxDEV(DetailsCards, {\n      loadHelpPanelContent: () => {\n        var _appLayout$current;\n        setToolsOpen(true);\n        (_appLayout$current = appLayout.current) === null || _appLayout$current === void 0 ? void 0 : _appLayout$current.focusToolsClose();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this),\n    contentType: \"cards\",\n    tools: /*#__PURE__*/_jsxDEV(ToolsContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 18\n    }, this),\n    toolsOpen: toolsOpen,\n    onToolsChange: _ref => {\n      let {\n        detail\n      } = _ref;\n      return setToolsOpen(detail.open);\n    },\n    stickyNotifications: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this)\n\n  // <ApolloProvider client={client}>\n  //   <div>\n  //      {/*<DashboardComponent/>*/}\n  //      {/*<MainComponent/>*/}\n  //     {/* <Home/>*/}\n  //     {/*<CardsComponent/>*/}\n  //   </div>\n  // </ApolloProvider>\n  ;\n}\n_s(App, \"9V7WLMCiDMNqb9k9Aoo+fVTHp8s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createAuthLink","createSubscriptionHandshakeLink","React","useState","useRef","forwardRef","ApolloProvider","ApolloClient","InMemoryCache","HttpLink","ApolloLink","appSyncConfig","Home","DashboardComponent","MainComponent","CardsComponent","AppLayout","AppLayoutProps","HelpPanel","Navigation","DetailsCards","jsxDEV","_jsxDEV","App","_s","toolsOpen","setToolsOpen","appLayout","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","aws_appsync_authenticationType","apiKey","aws_appsync_apiKey","httpLink","uri","appLayoutAriaLabels","navigation","navigationToggle","navigationClose","notifications","tools","toolsToggle","toolsClose","CustomAppLayout","props","ref","ariaLabels","fileName","_jsxFileName","lineNumber","columnNumber","link","from","client","cache","ToolsContent","header","children","activeHref","content","loadHelpPanelContent","_appLayout$current","current","focusToolsClose","contentType","onToolsChange","_ref","detail","open","stickyNotifications","_c","$RefreshReg$"],"sources":["/Users/dudu/git-repo/Echart-Report/src/App.js"],"sourcesContent":["import { createAuthLink } from \"aws-appsync-auth-link\";\nimport { createSubscriptionHandshakeLink } from \"aws-appsync-subscription-link\";\nimport React, {useState, useRef, forwardRef} from \"react\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  ApolloLink,\n} from \"@apollo/client\";\nimport \"./App.css\";\nimport appSyncConfig from \"./aws-exports\";\nimport Home from \"./Components/Home\";\nimport \"@cloudscape-design/global-styles/index.css\";\nimport DashboardComponent from \"./Components/DashboardComponent\";\nimport MainComponent from \"./Components/MainComponent\";\nimport CardsComponent from \"./Components/CardsComponent\";\nimport {AppLayout, AppLayoutProps, HelpPanel} from \"@cloudscape-design/components\";\nimport {Navigation} from \"./Common/navigation\";\nimport DetailsCards from \"./Components/Dashboard\";\nfunction App() {\n  const [toolsOpen, setToolsOpen] = useState(false);\n  const appLayout = useRef();\n  const url = appSyncConfig.aws_appsync_graphqlEndpoint;\n\n  const region = appSyncConfig.aws_appsync_region;\n\n  const auth = {\n    type: appSyncConfig.aws_appsync_authenticationType,\n    apiKey: appSyncConfig.aws_appsync_apiKey,\n    // jwtToken: async () => token, // Required when you use Cognito UserPools OR OpenID Connect. token object is obtained previously\n    // credentials: async () => credentials, // Required when you use IAM-based auth.\n  };\n\n  const httpLink = new HttpLink({ uri: url });\n\n  const appLayoutAriaLabels = {\n    navigation: 'Side navigation',\n    navigationToggle: 'Open side navigation',\n    navigationClose: 'Close side navigation',\n    notifications: 'Notifications',\n    tools: 'Help panel',\n    toolsToggle: 'Open help panel',\n    toolsClose: 'Close help panel',\n  };\n  const CustomAppLayout = forwardRef((props, ref) =>{\n    return <AppLayout ref={ref} ariaLabels={appLayoutAriaLabels} {...props} />;\n  });\n  const link = ApolloLink.from([\n    createAuthLink({ url, region, auth }),\n    createSubscriptionHandshakeLink({ url, region, auth }, httpLink),\n  ]);\n\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n\n  const ToolsContent = () => (\n      <HelpPanel  header={<h2>Distributions</h2>}>\n        <p>\n          View your current distributions and related information such as the associated domain names, delivery methods, SSL\n          certificates, and more. To drill down even further into the details, choose the name of an individual\n          distribution.\n        </p>\n      </HelpPanel>\n  );\n  return (\n      <CustomAppLayout\n          ref={appLayout}\n          navigation={<Navigation activeHref=\"#/distributions\" />}\n          // notifications={<Notifications successNotification={true} />}\n          // breadcrumbs={<Breadcrumbs />}\n          content={\n            <DetailsCards\n                loadHelpPanelContent={() => {\n                  setToolsOpen(true);\n                  appLayout.current?.focusToolsClose();\n                }}\n            />\n          }\n          contentType=\"cards\"\n          tools={<ToolsContent />}\n          toolsOpen={toolsOpen}\n          onToolsChange={({ detail }) => setToolsOpen(detail.open)}\n          stickyNotifications={true}\n      />\n\n\n    // <ApolloProvider client={client}>\n    //   <div>\n    //      {/*<DashboardComponent/>*/}\n    //      {/*<MainComponent/>*/}\n    //     {/* <Home/>*/}\n    //     {/*<CardsComponent/>*/}\n    //   </div>\n    // </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}