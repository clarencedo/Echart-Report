{"ast":null,"code":"var _jsxFileName = \"/Users/dudu/git-repo/Echart-Report/src/Components/EchartsBoardItemComponent.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport BoardItem from \"@cloudscape-design/board-components/board-item\";\nimport Header from \"@cloudscape-design/components/header\";\nimport Board from \"@cloudscape-design/board-components/board\";\nimport { Button } from \"@cloudscape-design/components\";\nimport Filter from \"./Filter\";\nimport TestComponent from \"./TestComponent\";\nimport EchartsComponent from \"./EchartsComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EchartsBoardItemComponent(props) {\n  _s();\n  const options = props.optionSet;\n  const [items, setItems] = React.useState([null]);\n  const [id, setId] = React.useState(1);\n  // const [options,setOptions] = React.useState([]);\n  React.useEffect(() => {\n    const boardItems = [];\n    if (items) {\n      setItems([]);\n    }\n    options.forEach(item => {\n      boardItems.push({\n        id: id,\n        rowSpan: 5,\n        columnSpan: 2,\n        data: {\n          title: \"title\",\n          content: /*#__PURE__*/_jsxDEV(EchartsComponent, {\n            option: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this)\n        }\n      });\n      setId(id => id + 1);\n      console.log(\"id\", id);\n      console.log('newitem', item);\n    });\n    console.log('items-2', boardItems);\n    setItems(boardItems);\n  }, [options]);\n  const dosomething = event => {\n    console.log(event, event.detail.items);\n    setItems(event.detail.items);\n  };\n  return /*#__PURE__*/_jsxDEV(Board, {\n    renderItem: item => /*#__PURE__*/_jsxDEV(BoardItem, {\n      header: /*#__PURE__*/_jsxDEV(Header, {\n        children: item.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this),\n      i18nStrings: {\n        dragHandleAriaLabel: \"Drag handle\",\n        dragHandleAriaDescription: \"Use Space or Enter to activate drag, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n        resizeHandleAriaLabel: \"Resize handle\",\n        resizeHandleAriaDescription: \"Use Space or Enter to activate resize, arrow keys to move, Space or Enter to submit, or Escape to discard.\"\n      },\n      children: item.data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this),\n    onItemsChange: event =>\n    //  setItems(event.detail.items)\n    dosomething(event),\n    items: items,\n    i18nStrings: (() => {\n      function createAnnouncement(operationAnnouncement, conflicts, disturbed) {\n        const conflictsAnnouncement = conflicts.length > 0 ? `Conflicts with ${conflicts.map(c => c.data.title).join(\", \")}.` : \"\";\n        const disturbedAnnouncement = disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : \"\";\n        return [operationAnnouncement, conflictsAnnouncement, disturbedAnnouncement].filter(Boolean).join(\" \");\n      }\n      return {\n        liveAnnouncementDndStarted: operationType => operationType === \"resize\" ? \"Resizing\" : \"Dragging\",\n        liveAnnouncementDndItemReordered: operation => {\n          const columns = `column ${operation.placement.x + 1}`;\n          const rows = `row ${operation.placement.y + 1}`;\n          return createAnnouncement(`Item moved to ${operation.direction === \"horizontal\" ? columns : rows}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndItemResized: operation => {\n          const columnsConstraint = operation.isMinimalColumnsReached ? \" (minimal)\" : \"\";\n          const rowsConstraint = operation.isMinimalRowsReached ? \" (minimal)\" : \"\";\n          const sizeAnnouncement = operation.direction === \"horizontal\" ? `columns ${operation.placement.width}${columnsConstraint}` : `rows ${operation.placement.height}${rowsConstraint}`;\n          return createAnnouncement(`Item resized to ${sizeAnnouncement}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndItemInserted: operation => {\n          const columns = `column ${operation.placement.x + 1}`;\n          const rows = `row ${operation.placement.y + 1}`;\n          return createAnnouncement(`Item inserted to ${columns}, ${rows}.`, operation.conflicts, operation.disturbed);\n        },\n        liveAnnouncementDndCommitted: operationType => `${operationType} committed`,\n        liveAnnouncementDndDiscarded: operationType => `${operationType} discarded`,\n        liveAnnouncementItemRemoved: op => createAnnouncement(`Removed item ${op.item.data.title}.`, [], op.disturbed),\n        navigationAriaLabel: \"Board navigation\",\n        navigationAriaDescription: \"Click on non-empty item to move focus over\",\n        navigationItemAriaLabel: item => item ? item.data.title : \"Empty\"\n      };\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s(EchartsBoardItemComponent, \"E/wkAhMdtIiwch5ItxwN0ec07dY=\");\n_c = EchartsBoardItemComponent;\nvar _c;\n$RefreshReg$(_c, \"EchartsBoardItemComponent\");","map":{"version":3,"names":["React","BoardItem","Header","Board","Button","Filter","TestComponent","EchartsComponent","jsxDEV","_jsxDEV","EchartsBoardItemComponent","props","_s","options","optionSet","items","setItems","useState","id","setId","useEffect","boardItems","forEach","item","push","rowSpan","columnSpan","data","title","content","option","fileName","_jsxFileName","lineNumber","columnNumber","console","log","dosomething","event","detail","renderItem","header","children","i18nStrings","dragHandleAriaLabel","dragHandleAriaDescription","resizeHandleAriaLabel","resizeHandleAriaDescription","onItemsChange","createAnnouncement","operationAnnouncement","conflicts","disturbed","conflictsAnnouncement","length","map","c","join","disturbedAnnouncement","filter","Boolean","liveAnnouncementDndStarted","operationType","liveAnnouncementDndItemReordered","operation","columns","placement","x","rows","y","direction","liveAnnouncementDndItemResized","columnsConstraint","isMinimalColumnsReached","rowsConstraint","isMinimalRowsReached","sizeAnnouncement","width","height","liveAnnouncementDndItemInserted","liveAnnouncementDndCommitted","liveAnnouncementDndDiscarded","liveAnnouncementItemRemoved","op","navigationAriaLabel","navigationAriaDescription","navigationItemAriaLabel","_c","$RefreshReg$"],"sources":["/Users/dudu/git-repo/Echart-Report/src/Components/EchartsBoardItemComponent.jsx"],"sourcesContent":["import * as React from \"react\";\nimport BoardItem from \"@cloudscape-design/board-components/board-item\";\nimport Header from \"@cloudscape-design/components/header\";\nimport Board from \"@cloudscape-design/board-components/board\";\nimport { Button } from \"@cloudscape-design/components\";\nimport Filter from \"./Filter\";\nimport TestComponent from \"./TestComponent\";\nimport EchartsComponent from \"./EchartsComponent\";\n\nexport default function EchartsBoardItemComponent(props) {\n   const options = props.optionSet;\n   const [items, setItems] = React.useState([null]);\n   const [id, setId] = React.useState(1);\n   // const [options,setOptions] = React.useState([]);\n    React.useEffect(()=>{\n      const boardItems = [];\n      if(items){\n         setItems([]);\n      }\n      options.forEach((item)=>{\n         boardItems.push({\n            id: id,\n            rowSpan: 5,\n            columnSpan: 2,\n            data:{\n               title: \"title\",\n               content: (\n                  <EchartsComponent option={item} />\n               )\n            }\n         })\n         setId((id) => id +1)\n         console.log(\"id\",id)\n         console.log('newitem', item);\n      })\n      console.log('items-2',boardItems)\n      setItems(boardItems);\n    },[options])\n    const dosomething = (event) => {\n      console.log(event, event.detail.items);\n      setItems(event.detail.items);\n    };\n    return (\n      <Board\n        renderItem={(item) => (\n          <BoardItem\n            header={<Header>{item.data.title}</Header>}\n            i18nStrings={{\n              dragHandleAriaLabel: \"Drag handle\",\n              dragHandleAriaDescription:\n                \"Use Space or Enter to activate drag, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n              resizeHandleAriaLabel: \"Resize handle\",\n              resizeHandleAriaDescription:\n                \"Use Space or Enter to activate resize, arrow keys to move, Space or Enter to submit, or Escape to discard.\",\n            }}\n          >\n            {item.data.content}\n            {/* {renderButton()} */}\n          </BoardItem>\n        )}\n        onItemsChange={(event) =>\n          //  setItems(event.detail.items)\n          dosomething(event)\n        }\n        items={items}\n        i18nStrings={(() => {\n          function createAnnouncement(\n            operationAnnouncement,\n            conflicts,\n            disturbed\n          ) {\n            const conflictsAnnouncement =\n              conflicts.length > 0\n                ? `Conflicts with ${conflicts\n                    .map((c) => c.data.title)\n                    .join(\", \")}.`\n                : \"\";\n            const disturbedAnnouncement =\n              disturbed.length > 0 ? `Disturbed ${disturbed.length} items.` : \"\";\n            return [\n              operationAnnouncement,\n              conflictsAnnouncement,\n              disturbedAnnouncement,\n            ]\n              .filter(Boolean)\n              .join(\" \");\n          }\n          return {\n            liveAnnouncementDndStarted: (operationType) =>\n              operationType === \"resize\" ? \"Resizing\" : \"Dragging\",\n            liveAnnouncementDndItemReordered: (operation) => {\n              const columns = `column ${operation.placement.x + 1}`;\n              const rows = `row ${operation.placement.y + 1}`;\n              return createAnnouncement(\n                `Item moved to ${\n                  operation.direction === \"horizontal\" ? columns : rows\n                }.`,\n                operation.conflicts,\n                operation.disturbed\n              );\n            },\n            liveAnnouncementDndItemResized: (operation) => {\n              const columnsConstraint = operation.isMinimalColumnsReached\n                ? \" (minimal)\"\n                : \"\";\n              const rowsConstraint = operation.isMinimalRowsReached\n                ? \" (minimal)\"\n                : \"\";\n              const sizeAnnouncement =\n                operation.direction === \"horizontal\"\n                  ? `columns ${operation.placement.width}${columnsConstraint}`\n                  : `rows ${operation.placement.height}${rowsConstraint}`;\n              return createAnnouncement(\n                `Item resized to ${sizeAnnouncement}.`,\n                operation.conflicts,\n                operation.disturbed\n              );\n            },\n            liveAnnouncementDndItemInserted: (operation) => {\n              const columns = `column ${operation.placement.x + 1}`;\n              const rows = `row ${operation.placement.y + 1}`;\n              return createAnnouncement(\n                `Item inserted to ${columns}, ${rows}.`,\n                operation.conflicts,\n                operation.disturbed\n              );\n            },\n            liveAnnouncementDndCommitted: (operationType) =>\n              `${operationType} committed`,\n            liveAnnouncementDndDiscarded: (operationType) =>\n              `${operationType} discarded`,\n            liveAnnouncementItemRemoved: (op) =>\n              createAnnouncement(\n                `Removed item ${op.item.data.title}.`,\n                [],\n                op.disturbed\n              ),\n            navigationAriaLabel: \"Board navigation\",\n            navigationAriaDescription:\n              \"Click on non-empty item to move focus over\",\n            navigationItemAriaLabel: (item) => (item ? item.data.title : \"Empty\"),\n          };\n        })()}\n      />\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}