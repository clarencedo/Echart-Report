{"ast":null,"code":"var _jsxFileName = \"/Users/clarence/Code/echart-report-ui/src/Components/Echart/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tabs from \"@cloudscape-design/components/tabs\";\nimport Button from \"@cloudscape-design/components/button\";\nimport TableChart from \"../Table\";\nimport DemoTable from \"./demo-table\";\nimport { useFetcher } from \"react-router-dom\";\nimport EchartsBoardItemComponent from \"../EchartsBoardItemComponent\";\nimport useSelectedTabStore from \"../../Store/SelectedTabStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartManagement = props => {\n  _s();\n  const {\n    tabValue,\n    optionSet,\n    tableValue,\n    tableColumns\n  } = props;\n  const [tabs, setTabs] = useState([tabValue]);\n  const TabIdStore = useSelectedTabStore();\n  const {\n    tabId,\n    setId\n  } = TabIdStore;\n  let id = 0;\n  const renderContent = param => {\n    let value = optionSet.filter(val => {\n      if (val.tab === param) {\n        return val;\n      }\n    });\n    if (optionSet.length >= 1) {\n      return /*#__PURE__*/_jsxDEV(EchartsBoardItemComponent, {\n        optionSet: value,\n        tableValue: tableValue,\n        tableColumns: tableColumns,\n        deleteId: id => onChartDelete(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  const onChartDelete = param => {};\n  useEffect(() => {\n    let tabItems = [];\n    tabValue.forEach(val => {\n      tabItems.push({\n        label: val,\n        id: id + 1,\n        content: renderContent(id + 1)\n      });\n      id++;\n    });\n    setTabs(tabItems);\n  }, [optionSet[optionSet.length - 1], tabValue[tabValue.length - 1]]);\n  return /*#__PURE__*/_jsxDEV(Tabs, {\n    onChange: e => {\n      setId(e.detail.activeTabId);\n    },\n    tabs: tabs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ChartManagement, \"eT42tUeuUso2qiyVdgEtZl9ovi8=\", false, function () {\n  return [useSelectedTabStore];\n});\n_c = ChartManagement;\nexport default ChartManagement;\n// export default React.memo(ChartManagement);\nvar _c;\n$RefreshReg$(_c, \"ChartManagement\");","map":{"version":3,"names":["React","useEffect","useState","Tabs","Button","TableChart","DemoTable","useFetcher","EchartsBoardItemComponent","useSelectedTabStore","jsxDEV","_jsxDEV","ChartManagement","props","_s","tabValue","optionSet","tableValue","tableColumns","tabs","setTabs","TabIdStore","tabId","setId","id","renderContent","param","value","filter","val","tab","length","deleteId","onChartDelete","fileName","_jsxFileName","lineNumber","columnNumber","children","tabItems","forEach","push","label","content","onChange","e","detail","activeTabId","_c","$RefreshReg$"],"sources":["/Users/clarence/Code/echart-report-ui/src/Components/Echart/index.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Tabs from \"@cloudscape-design/components/tabs\";\nimport Button from \"@cloudscape-design/components/button\";\nimport TableChart from \"../Table\";\nimport DemoTable from \"./demo-table\";\nimport {useFetcher} from \"react-router-dom\";\nimport EchartsBoardItemComponent from \"../EchartsBoardItemComponent\";\nimport useSelectedTabStore from \"../../Store/SelectedTabStore\";\nconst ChartManagement = (props) => {\n    const {tabValue,optionSet,tableValue,tableColumns} = props;\n    const [tabs,setTabs] = useState([tabValue])\n    const TabIdStore = useSelectedTabStore();\n    const {tabId, setId} = TabIdStore;\n    let id =0;\n    const renderContent = (param)=>{\n        let value = optionSet.filter((val)=>{\n            if(val.tab === param){\n                return val;\n            }\n        });\n        if(optionSet.length >=1){\n            return(\n            <EchartsBoardItemComponent\n                optionSet={value}\n                tableValue={tableValue}\n                tableColumns={tableColumns}\n                deleteId={id => onChartDelete(id)}\n            />\n            )\n        }else{\n            return <div>Empty</div>\n        }\n    }\n    const onChartDelete = (param) =>{\n\n    }\n    useEffect(()=>{\n        let tabItems= [];\n        tabValue.forEach((val)=>{\n            tabItems.push({\n                label: val,\n                id: id+1,\n                content: renderContent(id+1)\n            });\n            id++;\n        });\n       setTabs(tabItems);\n    },[optionSet[optionSet.length - 1],tabValue[tabValue.length -1]])\n    return (\n        <Tabs\n            onChange={(e)=>{setId(e.detail.activeTabId)}}\n            tabs={tabs}\n        />\n    );\n};\n\nexport default ChartManagement;\n// export default React.memo(ChartManagement);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,IAAI,MAAM,oCAAoC;AACrD,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,UAAU,MAAM,UAAU;AACjC,OAAOC,SAAS,MAAM,cAAc;AACpC,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,OAAOC,yBAAyB,MAAM,8BAA8B;AACpE,OAAOC,mBAAmB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/D,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM;IAACC,QAAQ;IAACC,SAAS;IAACC,UAAU;IAACC;EAAY,CAAC,GAAGL,KAAK;EAC1D,MAAM,CAACM,IAAI,EAACC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAACa,QAAQ,CAAC,CAAC;EAC3C,MAAMM,UAAU,GAAGZ,mBAAmB,EAAE;EACxC,MAAM;IAACa,KAAK;IAAEC;EAAK,CAAC,GAAGF,UAAU;EACjC,IAAIG,EAAE,GAAE,CAAC;EACT,MAAMC,aAAa,GAAIC,KAAK,IAAG;IAC3B,IAAIC,KAAK,GAAGX,SAAS,CAACY,MAAM,CAAEC,GAAG,IAAG;MAChC,IAAGA,GAAG,CAACC,GAAG,KAAKJ,KAAK,EAAC;QACjB,OAAOG,GAAG;MACd;IACJ,CAAC,CAAC;IACF,IAAGb,SAAS,CAACe,MAAM,IAAG,CAAC,EAAC;MACpB,oBACApB,OAAA,CAACH,yBAAyB;QACtBQ,SAAS,EAAEW,KAAM;QACjBV,UAAU,EAAEA,UAAW;QACvBC,YAAY,EAAEA,YAAa;QAC3Bc,QAAQ,EAAER,EAAE,IAAIS,aAAa,CAACT,EAAE;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpC;IAEN,CAAC,MAAI;MACD,oBAAO1B,OAAA;QAAA2B,QAAA,EAAK;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAC3B;EACJ,CAAC;EACD,MAAMJ,aAAa,GAAIP,KAAK,IAAI,CAEhC,CAAC;EACDzB,SAAS,CAAC,MAAI;IACV,IAAIsC,QAAQ,GAAE,EAAE;IAChBxB,QAAQ,CAACyB,OAAO,CAAEX,GAAG,IAAG;MACpBU,QAAQ,CAACE,IAAI,CAAC;QACVC,KAAK,EAAEb,GAAG;QACVL,EAAE,EAAEA,EAAE,GAAC,CAAC;QACRmB,OAAO,EAAElB,aAAa,CAACD,EAAE,GAAC,CAAC;MAC/B,CAAC,CAAC;MACFA,EAAE,EAAE;IACR,CAAC,CAAC;IACHJ,OAAO,CAACmB,QAAQ,CAAC;EACpB,CAAC,EAAC,CAACvB,SAAS,CAACA,SAAS,CAACe,MAAM,GAAG,CAAC,CAAC,EAAChB,QAAQ,CAACA,QAAQ,CAACgB,MAAM,GAAE,CAAC,CAAC,CAAC,CAAC;EACjE,oBACIpB,OAAA,CAACR,IAAI;IACDyC,QAAQ,EAAGC,CAAC,IAAG;MAACtB,KAAK,CAACsB,CAAC,CAACC,MAAM,CAACC,WAAW,CAAC;IAAA,CAAE;IAC7C5B,IAAI,EAAEA;EAAK;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAEV,CAAC;AAACvB,EAAA,CA9CIF,eAAe;EAAA,QAGEH,mBAAmB;AAAA;AAAAuC,EAAA,GAHpCpC,eAAe;AAgDrB,eAAeA,eAAe;AAC9B;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}