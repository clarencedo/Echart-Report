{"ast":null,"code":"var _jsxFileName = \"/Users/dudu/git-repo/Echart-Report/src/App.js\";\nimport { createAuthLink } from \"aws-appsync-auth-link\";\nimport { createSubscriptionHandshakeLink } from \"aws-appsync-subscription-link\";\nimport React from \"react\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink, ApolloLink } from \"@apollo/client\";\nimport \"./App.css\";\nimport appSyncConfig from \"./aws-exports\";\nimport Home from \"./Components/Home\";\nimport \"@cloudscape-design/global-styles/index.css\";\nimport DashboardComponent from \"./Components/DashboardComponent\";\nimport MainComponent from \"./Components/MainComponent\";\nimport CardsComponent from \"./Components/CardsComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const url = appSyncConfig.aws_appsync_graphqlEndpoint;\n  const region = appSyncConfig.aws_appsync_region;\n  const auth = {\n    type: appSyncConfig.aws_appsync_authenticationType,\n    apiKey: appSyncConfig.aws_appsync_apiKey\n    // jwtToken: async () => token, // Required when you use Cognito UserPools OR OpenID Connect. token object is obtained previously\n    // credentials: async () => credentials, // Required when you use IAM-based auth.\n  };\n\n  const httpLink = new HttpLink({\n    uri: url\n  });\n  const link = ApolloLink.from([createAuthLink({\n    url,\n    region,\n    auth\n  }), createSubscriptionHandshakeLink({\n    url,\n    region,\n    auth\n  }, httpLink)]);\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache()\n  });\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MainComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createAuthLink","createSubscriptionHandshakeLink","React","ApolloProvider","ApolloClient","InMemoryCache","HttpLink","ApolloLink","appSyncConfig","Home","DashboardComponent","MainComponent","CardsComponent","jsxDEV","_jsxDEV","App","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","aws_appsync_authenticationType","apiKey","aws_appsync_apiKey","httpLink","uri","link","from","client","cache","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dudu/git-repo/Echart-Report/src/App.js"],"sourcesContent":["import { createAuthLink } from \"aws-appsync-auth-link\";\nimport { createSubscriptionHandshakeLink } from \"aws-appsync-subscription-link\";\nimport React from \"react\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  HttpLink,\n  ApolloLink,\n} from \"@apollo/client\";\nimport \"./App.css\";\nimport appSyncConfig from \"./aws-exports\";\nimport Home from \"./Components/Home\";\nimport \"@cloudscape-design/global-styles/index.css\";\nimport DashboardComponent from \"./Components/DashboardComponent\";\nimport MainComponent from \"./Components/MainComponent\";\nimport CardsComponent from \"./Components/CardsComponent\";\nfunction App() {\n  const url = appSyncConfig.aws_appsync_graphqlEndpoint;\n\n  const region = appSyncConfig.aws_appsync_region;\n\n  const auth = {\n    type: appSyncConfig.aws_appsync_authenticationType,\n    apiKey: appSyncConfig.aws_appsync_apiKey,\n    // jwtToken: async () => token, // Required when you use Cognito UserPools OR OpenID Connect. token object is obtained previously\n    // credentials: async () => credentials, // Required when you use IAM-based auth.\n  };\n\n  const httpLink = new HttpLink({ uri: url });\n\n  const link = ApolloLink.from([\n    createAuthLink({ url, region, auth }),\n    createSubscriptionHandshakeLink({ url, region, auth }, httpLink),\n  ]);\n\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <div>\n         {/*<DashboardComponent/>*/}\n         <MainComponent/>\n        {/* <Home/>*/}\n        {/*<CardsComponent/>*/}\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,+BAA+B,QAAQ,+BAA+B;AAC/E,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,YAAY,EACZC,aAAa,EACbC,QAAQ,EACRC,UAAU,QACL,gBAAgB;AACvB,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,eAAe;AACzC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,4CAA4C;AACnD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,GAAG,GAAGR,aAAa,CAACS,2BAA2B;EAErD,MAAMC,MAAM,GAAGV,aAAa,CAACW,kBAAkB;EAE/C,MAAMC,IAAI,GAAG;IACXC,IAAI,EAAEb,aAAa,CAACc,8BAA8B;IAClDC,MAAM,EAAEf,aAAa,CAACgB;IACtB;IACA;EACF,CAAC;;EAED,MAAMC,QAAQ,GAAG,IAAInB,QAAQ,CAAC;IAAEoB,GAAG,EAAEV;EAAI,CAAC,CAAC;EAE3C,MAAMW,IAAI,GAAGpB,UAAU,CAACqB,IAAI,CAAC,CAC3B5B,cAAc,CAAC;IAAEgB,GAAG;IAAEE,MAAM;IAAEE;EAAK,CAAC,CAAC,EACrCnB,+BAA+B,CAAC;IAAEe,GAAG;IAAEE,MAAM;IAAEE;EAAK,CAAC,EAAEK,QAAQ,CAAC,CACjE,CAAC;EAEF,MAAMI,MAAM,GAAG,IAAIzB,YAAY,CAAC;IAC9BuB,IAAI;IACJG,KAAK,EAAE,IAAIzB,aAAa;EAC1B,CAAC,CAAC;EAEF,oBACES,OAAA,CAACX,cAAc;IAAC0B,MAAM,EAAEA,MAAO;IAAAE,QAAA,eAC7BjB,OAAA;MAAAiB,QAAA,eAEGjB,OAAA,CAACH,aAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGb;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAErB;AAACC,EAAA,GAlCQrB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}